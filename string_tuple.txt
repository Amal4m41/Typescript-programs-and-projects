/*
Tuple: an array that takes multiple data types.
Operations of tuple: push and pop
It's mutable too!
*/

// var tuple_name=[1,'2',4.6,[23,34],{1:2,3:[3,4]}]









// console.clear()
// var n=Number(prompt("Enter the number of elements : "))
// var tuple:any[]=[]   //this is how it's different from an array.... it's of type=>any
// for(let i=0;i<n;i++){
//     tuple[i]=Number(prompt("Enter the value for index "+(i+1)+" : "))
// }
// console.log(tuple.push('wer'))
// console.log(tuple)
// console.log(tuple.pop())
// console.log(tuple)

// // var t=tuple    //both will point to the same reference id 
// // t[0]=100
// // console.log(t)
// // console.log(tuple)


// //to empty the tuple
// tuple=[]



console.clear()
// Create a tuple and display the same using functions:

// function create_tuple(){
//     let n=Number(prompt("Enter the number of elements : "))
//     let tuple:any[]=[]   
//     for(let i=0;i<n;i++){
//         tuple[i]=Number(prompt("Enter the value for index "+(i+1)+" : "))
//     }
//     return tuple
// }

// function display_tuple(tuple_value:any[]){
//     for(let i=0;i<tuple_value.length;i++){
//         console.log(tuple_value[i])
//     }
// }



// display_tuple(create_tuple())


//Create tuple dynamically and print only the odd terms in them
// function create_and_print_odd_terms(size:Number)
// {
//     let tuple:any[]=[]
//     for(let i=0;i<size;i++){
//         tuple.push(Number(prompt("Enter the value : ")))
//         if(tuple[i]%2!=0){
//             console.log(tuple[i])
//         }
//     }
// }

// create_and_print_odd_terms(Number(prompt('Enter the size of tuple : ')))




//strings


// var str="this is a string value"
// var str2=new String("this is a string value")

// console.log(str,typeof(str))   //of type string
// console.log(str2,typeof(str2))  //of type object

// console.log(typeof([1,2,3,4]))
// console.log(typeof(new Array(1,2,3,4)))           //both gives object type

// var s1='this is a string'
// var s2="another string"
// var back_tick_string= `${s1} and ${s2}`

// console.log(back_tick_string)

// var s='this is us'
// console.log(s[s.length-1])
// console.log(s.charAt(s.length-1))




/* Input: i liKe proGraMMinG 
 Ouput: I Like Programming
// */
// var str:String='i liKe proGraMMing'
// var output:String=new String()
// for(let i=0;i<str.split(' ').length;i++)
// {
//     output+= str.split(' ')[i][0].toUpperCase()+str.split(' ')[i].slice(1,).toLowerCase()+" "
// }
// console.log(output.trim())



console.clear()
//Palindrome

function check_palindrome(str_value:String):boolean{
    for(let i=0;i<Math.floor(str_value.length/2);i++)
    {
        // console.log(str_value[i],str_value[str_value.length-i-1])
        if(str_value[i].toLowerCase()!=str_value[str_value.length-i-1].toLowerCase()){
            return false     
        }
    }
    return true
}

console.log(check_palindrome("Dad")?"Palindrome":"Not a Palindrome")
console.log(check_palindrome("Malayalam")?"Palindrome":"Not a Palindrome")
console.log(check_palindrome("malayalam")?"Palindrome":"Not a Palindrome")
console.log(check_palindrome("daddy")?"Palindrome":"Not a Palindrome")


